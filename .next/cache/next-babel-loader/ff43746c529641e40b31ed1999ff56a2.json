{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { INCREMENT_COUNTER, DECREMENT_COUNTER } from '../actions/types';\nvar initialState = {\n  counter: 0\n};\n\nvar counterReducer = function counterReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case INCREMENT_COUNTER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        value: state.value + 1\n      });\n\n    case DECREMENT_COUNTER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        value: state.value - 1\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nexport default counterReducer;","map":{"version":3,"sources":["W:/1FrontEnd/react stuff/basketballApi/redux/reducers/counterReducer.js"],"names":["INCREMENT_COUNTER","DECREMENT_COUNTER","initialState","counter","counterReducer","state","action","type","value"],"mappings":";;;;;;AAAA,SAAQA,iBAAR,EAA0BC,iBAA1B,QAAmD,kBAAnD;AAGA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE;AADQ,CAArB;;AAIA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAiC;AAAA,MAAhCC,KAAgC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,iBAAL;AACI,6CAAWK,KAAX;AAAkBG,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,GAAc;AAAvC;;AACJ,SAAKP,iBAAL;AACI,6CAAWI,KAAX;AAAkBG,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,GAAc;AAAvC;;AACJ;AACI,+BAAWH,KAAX;AANR;AAQH,CATD;;AAWA,eAAeD,cAAf","sourcesContent":["import {INCREMENT_COUNTER,DECREMENT_COUNTER } from '../actions/types'\r\n\r\n\r\nconst initialState = {\r\n    counter: 0\r\n};\r\n\r\nconst counterReducer = (state= initialState, action) => {\r\n    switch (action.type) {\r\n        case INCREMENT_COUNTER:\r\n            return {...state, value: state.value + 1};\r\n        case DECREMENT_COUNTER:\r\n            return {...state, value: state.value - 1};\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n\r\nexport default counterReducer;\r\n\r\n"]},"metadata":{},"sourceType":"module"}