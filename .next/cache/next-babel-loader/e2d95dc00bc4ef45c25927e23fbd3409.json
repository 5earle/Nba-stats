{"ast":null,"code":"import { INCREMENT_COUNTER, DECREMENT_COUNTER, SAVE_TEAMS, GET_PLAYERS, SEARCH_PLAYER_ONE, SEARCH_PLAYER_TWO, GET_SINGLE_ROASTER, SET_LOADING, GET_ALL_PLAYERS_ID } from './types';\nimport { useDispatch } from 'react-redux'; //Action Creator\n\nexport const incrementCounter = () => ({\n  type: INCREMENT_COUNTER\n});\nexport const decrementCounter = () => ({\n  type: DECREMENT_COUNTER\n});\nexport const searchPlayerTwo = text => async dispatch => {\n  try {\n    const res = await fetch(`http://data.nba.net/10s/prod/v1/2019/players/${text}_profile.json`);\n    const data = await res.json();\n    dispatch({\n      type: SEARCH_PLAYER_TWO,\n      payload: data.league.standard.stats.careerSummary\n    });\n  } catch (e) {\n    console.log(e);\n  }\n};\nexport const getPlayers = () => async dispatch => ({\n  type: GET_PLAYERS\n}); //-//\n\nexport const addTeams = Teams => ({\n  type: SAVE_TEAMS,\n  payload: Teams\n});\nexport const searchPlayers = term => async dispatch => {\n  try {\n    //send to the reducer\n    setLoading();\n    const res = [];\n    let terms = term.map(item => {\n      fetch(`http://data.nba.net/10s/prod/v1/2019/players/${term}_profile.json`).then(item => {\n        res.push(item);\n      });\n    });\n    const data = await res.json();\n    dispatch({\n      type: SEARCH_PLAYER_ONE,\n      payload: data.league.standard.stats.careerSummary\n    });\n  } catch (e) {\n    console.log(e);\n  }\n};\nexport const getSingleRoaster = teamname => dispatch => {\n  //send to the reducer\n  setLoading();\n  dispatch({\n    type: GET_SINGLE_ROASTER,\n    payload: teamname\n  });\n};\nexport const getAllPlayerId = teamid => async dispatch => {\n  try {\n    //send to the reducer\n    setLoading();\n    const res = await fetch(`http://data.nba.net/10s/prod/v1/2019/teams/${teamid}/roster.json`);\n    const data = await res.json();\n    dispatch({\n      type: GET_ALL_PLAYERS_ID,\n      payload: data\n    });\n  } catch (e) {}\n}; // Set loading to true\n\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n};","map":{"version":3,"sources":["W:/1FrontEnd/react stuff/courtSide/redux/actions/counterActions.js"],"names":["INCREMENT_COUNTER","DECREMENT_COUNTER","SAVE_TEAMS","GET_PLAYERS","SEARCH_PLAYER_ONE","SEARCH_PLAYER_TWO","GET_SINGLE_ROASTER","SET_LOADING","GET_ALL_PLAYERS_ID","useDispatch","incrementCounter","type","decrementCounter","searchPlayerTwo","text","dispatch","res","fetch","data","json","payload","league","standard","stats","careerSummary","e","console","log","getPlayers","addTeams","Teams","searchPlayers","term","setLoading","terms","map","item","then","push","getSingleRoaster","teamname","getAllPlayerId","teamid"],"mappings":"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","sourcesContent":["import {INCREMENT_COUNTER,\r\n    DECREMENT_COUNTER,\r\n    SAVE_TEAMS,\r\n    GET_PLAYERS,\r\n    SEARCH_PLAYER_ONE,\r\n    SEARCH_PLAYER_TWO,\r\n    GET_SINGLE_ROASTER,\r\n    SET_LOADING,\r\n    GET_ALL_PLAYERS_ID } from './types'\r\nimport {useDispatch} from 'react-redux';\r\n\r\n\r\n//Action Creator\r\nexport const incrementCounter = () => ({\r\n    type: INCREMENT_COUNTER\r\n});\r\n\r\nexport const decrementCounter = () => ({\r\n    type: DECREMENT_COUNTER\r\n});\r\n\r\n\r\n\r\n\r\n\r\nexport const searchPlayerTwo = text => async dispatch => {\r\n    try{\r\n        const res = await fetch(`http://data.nba.net/10s/prod/v1/2019/players/${text}_profile.json`);\r\n        const data = await res.json();\r\n\r\n        dispatch({\r\n            type: SEARCH_PLAYER_TWO,\r\n            payload: data.league.standard.stats.careerSummary\r\n        })\r\n\r\n    }catch (e) {\r\n        console.log(e);\r\n    }\r\n\r\n};\r\n\r\nexport const getPlayers = () => async dispatch => ({\r\n    type: GET_PLAYERS\r\n});\r\n\r\n\r\n//-//\r\nexport const addTeams = Teams => ({\r\n    type: SAVE_TEAMS,\r\n    payload: Teams\r\n});\r\n\r\nexport const searchPlayers = (term)  => async dispatch => {\r\n    try{\r\n        //send to the reducer\r\n        setLoading();\r\n\r\n        const res = [];\r\n        let terms = term.map((item)=>{\r\n            fetch(`http://data.nba.net/10s/prod/v1/2019/players/${term}_profile.json`)\r\n                .then(item =>{\r\n                    res.push(item);\r\n                })\r\n        })\r\n\r\n        const data = await res.json();\r\n\r\n        dispatch({\r\n            type: SEARCH_PLAYER_ONE,\r\n            payload: data.league.standard.stats.careerSummary\r\n        })\r\n\r\n\r\n    }catch (e) {\r\n        console.log(e);\r\n    }\r\n\r\n};\r\n\r\nexport const getSingleRoaster = teamname => dispatch =>{\r\n\r\n    //send to the reducer\r\n    setLoading();\r\n\r\n    dispatch({\r\n        type: GET_SINGLE_ROASTER,\r\n        payload: teamname\r\n    })\r\n}\r\n\r\nexport const getAllPlayerId = teamid => async dispatch =>{\r\n\r\n    try{\r\n        //send to the reducer\r\n        setLoading();\r\n\r\n        const res = await fetch(`http://data.nba.net/10s/prod/v1/2019/teams/${teamid}/roster.json`);\r\n        const data = await res.json();\r\n\r\n        dispatch({\r\n            type: GET_ALL_PLAYERS_ID,\r\n            payload: data\r\n        })\r\n    }catch (e) {\r\n\r\n    }\r\n}\r\n\r\n\r\n// Set loading to true\r\nexport const setLoading = () => {\r\n    return {\r\n        type: SET_LOADING\r\n    };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}