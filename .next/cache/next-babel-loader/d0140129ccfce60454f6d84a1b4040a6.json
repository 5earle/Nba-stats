{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport fetch from \"isomorphic-fetch\";\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport StatsDisplay from '../components/StatsDisplay';\nimport Teams from '../components/teams';\nimport theme from '../src/Theme';\nimport { addTeams } from '../redux/actions/counterActions';\nimport { makeStyles, MuiThemeProvider } from '@material-ui/core/styles';\nimport Typography from \"@material-ui/core/Typography\";\nvar useStyles = makeStyles({\n  root: {\n    backgroundImage: \"url(\".concat(\"./floor.png\", \")\"),\n    backgroundAttachment: 'fixed',\n    height: '100vh'\n  }\n});\n\nvar Index = function Index(prop) {\n  console.log(prop);\n  var classes = useStyles();\n  var dispatch = useDispatch();\n  useEffect(function () {\n    if (prop.stats) {\n      dispatch(addTeams(prop.stats['standard']));\n    }\n  }, []);\n  /* (function addToState() {\r\n       dispatch(addTeams(prop.stats['standard']));\r\n   })()*/\n\n  return __jsx(MuiThemeProvider, {\n    theme: theme\n  }, __jsx(\"div\", null, __jsx(Teams, null)));\n}; //life cycle method, run when load\n\n\nIndex.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var store, data, res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            store = _ref.store;\n            _context.prev = 1;\n            _context.next = 4;\n            return fetch('http://data.nba.net/10s/prod/v2/2019/teams.json');\n\n          case 4:\n            res = _context.sent;\n            _context.next = 7;\n            return res.json();\n\n          case 7:\n            data = _context.sent;\n            _context.next = 14;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(_context.t0);\n            data = \"empty\";\n\n          case 14:\n            return _context.abrupt(\"return\", {\n              stats: data.league\n            });\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 10]]);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}