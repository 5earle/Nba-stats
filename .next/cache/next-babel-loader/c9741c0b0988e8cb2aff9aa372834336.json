{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { INCREMENT_COUNTER, DECREMENT_COUNTER, SAVE_PLAYERS, GET_PLAYERS, SEARCH_PLAYER_ONE, SEARCH_PLAYER_TWO } from './types';\nimport { useDispatch } from 'react-redux'; //Action Creator\n\nexport var incrementCounter = function incrementCounter() {\n  return {\n    type: INCREMENT_COUNTER\n  };\n};\nexport var decrementCounter = function decrementCounter() {\n  return {\n    type: DECREMENT_COUNTER\n  };\n};\nexport var addPlayers = function addPlayers(basketBallPlayers) {\n  return {\n    type: SAVE_PLAYERS,\n    payload: basketBallPlayers\n  };\n};\nexport var searchPlayers = function searchPlayers(textObj) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var term, res, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              term = textObj.value;\n              _context.next = 4;\n              return fetch(\"http://data.nba.net/10s/prod/v1/2019/players/\".concat(term, \"_profile.json\"));\n\n            case 4:\n              res = _context.sent;\n              _context.next = 7;\n              return res.json();\n\n            case 7:\n              data = _context.sent;\n\n              if (textObj.id === 'first') {\n                dispatch({\n                  type: SEARCH_PLAYER_ONE,\n                  payload: data.league.standard.stats.careerSummary\n                });\n              } else if (textObj.id === 'second') {\n                dispatch({\n                  type: SEARCH_PLAYER_TWO,\n                  payload: data.league.standard.stats.careerSummary\n                });\n              }\n\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 11]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var searchPlayerTwo = function searchPlayerTwo(text) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return fetch(\"http://data.nba.net/10s/prod/v1/2019/players/\".concat(text, \"_profile.json\"));\n\n            case 3:\n              res = _context2.sent;\n              _context2.next = 6;\n              return res.json();\n\n            case 6:\n              data = _context2.sent;\n              dispatch({\n                type: SEARCH_PLAYER_TWO,\n                payload: data.league.standard.stats.careerSummary\n              });\n              _context2.next = 13;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0);\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 10]]);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var getPlayers = function getPlayers() {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              return _context3.abrupt(\"return\", {\n                type: GET_PLAYERS\n              });\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["W:/1FrontEnd/react stuff/basketballApi/redux/actions/counterActions.js"],"names":["INCREMENT_COUNTER","DECREMENT_COUNTER","SAVE_PLAYERS","GET_PLAYERS","SEARCH_PLAYER_ONE","SEARCH_PLAYER_TWO","useDispatch","incrementCounter","type","decrementCounter","addPlayers","basketBallPlayers","payload","searchPlayers","textObj","dispatch","term","value","fetch","res","json","data","id","league","standard","stats","careerSummary","console","log","searchPlayerTwo","text","getPlayers"],"mappings":";;AAAA,SAAQA,iBAAR,EACIC,iBADJ,EAEIC,YAFJ,EAGIC,WAHJ,EAIIC,iBAJJ,EAKIC,iBALJ,QAK4B,SAL5B;AAMA,SAAQC,WAAR,QAA0B,aAA1B,C,CAGA;;AACA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,SAAO;AACnCC,IAAAA,IAAI,EAAER;AAD6B,GAAP;AAAA,CAAzB;AAIP,OAAO,IAAMS,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,SAAO;AACnCD,IAAAA,IAAI,EAAEP;AAD6B,GAAP;AAAA,CAAzB;AAIP,OAAO,IAAMS,UAAU,GAAG,SAAbA,UAAa,CAAAC,iBAAiB;AAAA,SAAK;AAC5CH,IAAAA,IAAI,EAAEN,YADsC;AAE5CU,IAAAA,OAAO,EAAED;AAFmC,GAAL;AAAA,CAApC;AAKP,OAAO,IAAME,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,OAAO;AAAA;AAAA,wEAAI,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAE1BC,cAAAA,IAF0B,GAEnBF,OAAO,CAACG,KAFW;AAAA;AAAA,qBAGdC,KAAK,wDAAiDF,IAAjD,mBAHS;;AAAA;AAG1BG,cAAAA,GAH0B;AAAA;AAAA,qBAIbA,GAAG,CAACC,IAAJ,EAJa;;AAAA;AAI1BC,cAAAA,IAJ0B;;AAMhC,kBAAGP,OAAO,CAACQ,EAAR,KAAe,OAAlB,EAA0B;AACtBP,gBAAAA,QAAQ,CAAC;AACLP,kBAAAA,IAAI,EAAEJ,iBADD;AAELQ,kBAAAA,OAAO,EAAES,IAAI,CAACE,MAAL,CAAYC,QAAZ,CAAqBC,KAArB,CAA2BC;AAF/B,iBAAD,CAAR;AAIH,eALD,MAKO,IAAGZ,OAAO,CAACQ,EAAR,KAAe,QAAlB,EAA2B;AAC9BP,gBAAAA,QAAQ,CAAC;AACLP,kBAAAA,IAAI,EAAEH,iBADD;AAELO,kBAAAA,OAAO,EAAES,IAAI,CAACE,MAAL,CAAYC,QAAZ,CAAqBC,KAArB,CAA2BC;AAF/B,iBAAD,CAAR;AAIH;;AAhB+B;AAAA;;AAAA;AAAA;AAAA;AAoBhCC,cAAAA,OAAO,CAACC,GAAR;;AApBgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA,CAA7B;AAyBP,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,IAAI;AAAA;AAAA,yEAAI,kBAAMf,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEbG,KAAK,wDAAiDY,IAAjD,mBAFQ;;AAAA;AAEzBX,cAAAA,GAFyB;AAAA;AAAA,qBAGZA,GAAG,CAACC,IAAJ,EAHY;;AAAA;AAGzBC,cAAAA,IAHyB;AAK/BN,cAAAA,QAAQ,CAAC;AACLP,gBAAAA,IAAI,EAAEH,iBADD;AAELO,gBAAAA,OAAO,EAAES,IAAI,CAACE,MAAL,CAAYC,QAAZ,CAAqBC,KAArB,CAA2BC;AAF/B,eAAD,CAAR;AAL+B;AAAA;;AAAA;AAAA;AAAA;AAW/BC,cAAAA,OAAO,CAACC,GAAR;;AAX+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;AAgBP,OAAO,IAAMG,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA,yEAAM,kBAAMhB,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA,gDAAmB;AAC/CP,gBAAAA,IAAI,EAAEL;AADyC,eAAnB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAN;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB","sourcesContent":["import {INCREMENT_COUNTER,\r\n    DECREMENT_COUNTER,\r\n    SAVE_PLAYERS,\r\n    GET_PLAYERS,\r\n    SEARCH_PLAYER_ONE,\r\n    SEARCH_PLAYER_TWO} from './types'\r\nimport {useDispatch} from 'react-redux';\r\n\r\n\r\n//Action Creator\r\nexport const incrementCounter = () => ({\r\n    type: INCREMENT_COUNTER\r\n});\r\n\r\nexport const decrementCounter = () => ({\r\n    type: DECREMENT_COUNTER\r\n});\r\n\r\nexport const addPlayers = basketBallPlayers => ({\r\n    type: SAVE_PLAYERS,\r\n    payload: basketBallPlayers\r\n});\r\n\r\nexport const searchPlayers = textObj => async dispatch => {\r\n    try{\r\n        const term = textObj.value;\r\n        const res = await fetch(`http://data.nba.net/10s/prod/v1/2019/players/${term}_profile.json`);\r\n        const data = await res.json();\r\n\r\n        if(textObj.id === 'first'){\r\n            dispatch({\r\n                type: SEARCH_PLAYER_ONE,\r\n                payload: data.league.standard.stats.careerSummary\r\n            })\r\n        } else if(textObj.id === 'second'){\r\n            dispatch({\r\n                type: SEARCH_PLAYER_TWO,\r\n                payload: data.league.standard.stats.careerSummary\r\n            })\r\n        }\r\n\r\n\r\n    }catch (e) {\r\n        console.log(e);\r\n    }\r\n\r\n};\r\n\r\nexport const searchPlayerTwo = text => async dispatch => {\r\n    try{\r\n        const res = await fetch(`http://data.nba.net/10s/prod/v1/2019/players/${text}_profile.json`);\r\n        const data = await res.json();\r\n\r\n        dispatch({\r\n            type: SEARCH_PLAYER_TWO,\r\n            payload: data.league.standard.stats.careerSummary\r\n        })\r\n\r\n    }catch (e) {\r\n        console.log(e);\r\n    }\r\n\r\n};\r\n\r\nexport const getPlayers = () => async dispatch => ({\r\n    type: GET_PLAYERS\r\n});\r\n"]},"metadata":{},"sourceType":"module"}