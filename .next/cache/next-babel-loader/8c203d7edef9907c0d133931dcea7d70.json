{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"W:\\\\1FrontEnd\\\\react stuff\\\\courtSide\\\\pages\\\\roster.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { getSingleRoaster, getAllPlayerId } from '../redux/actions/counterActions'; //--//\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nvar useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  }\n});\n\nvar Roster = function Roster(props) {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.counter;\n  }),\n      teamRoaster = _useSelector.teamRoaster,\n      personIds = _useSelector.personIds;\n\n  useEffect(function () {\n    dispatch(getSingleRoaster(props.teamID));\n  }, []);\n  useEffect(function () {\n    console.log(teamRoaster[0].teamId);\n    dispatch(getAllPlayerId(teamRoaster[0].teamId));\n  }, [teamRoaster]);\n  useEffect(function () {\n    console.log(personIds);\n  }, [personIds]);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, props.teamID, \"xx\"));\n};\n\n_s(Roster, \"97lv3n6cpq6Fv7r8qRjzHam/+fo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Roster;\n\nRoster.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var store, req, res, query, teamName;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            store = _ref.store, req = _ref.req, res = _ref.res, query = _ref.query;\n            teamName = query.team;\n            return _context.abrupt(\"return\", {\n              teamID: teamName\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Roster;\n\nvar _c;\n\n$RefreshReg$(_c, \"Roster\");","map":{"version":3,"sources":["W:/1FrontEnd/react stuff/courtSide/pages/roster.js"],"names":["React","useEffect","useState","fetch","connect","useDispatch","useSelector","getSingleRoaster","getAllPlayerId","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useStyles","table","minWidth","Roster","props","dispatch","state","counter","teamRoaster","personIds","teamID","console","log","teamId","getInitialProps","store","req","res","query","teamName","team"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAAQC,OAAR,EAAgBC,WAAhB,EAA4BC,WAA5B,QAA8C,aAA9C;AACA,SAAQC,gBAAR,EAAyBC,cAAzB,QAA8C,iCAA9C,C,CAEA;;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AAGA,IAAMC,SAAS,GAAGR,UAAU,CAAC;AACzBS,EAAAA,KAAK,EAAE;AACHC,IAAAA,QAAQ,EAAE;AADP;AADkB,CAAD,CAA5B;;AAMA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AAAA;;AACtB,MAAMC,QAAQ,GAAGjB,WAAW,EAA5B;;AADsB,qBAEUC,WAAW,CAAC,UAACiB,KAAD;AAAA,WAASA,KAAK,CAACC,OAAf;AAAA,GAAD,CAFrB;AAAA,MAEfC,WAFe,gBAEfA,WAFe;AAAA,MAEHC,SAFG,gBAEHA,SAFG;;AAItBzB,EAAAA,SAAS,CAAC,YAAI;AACVqB,IAAAA,QAAQ,CAACf,gBAAgB,CAACc,KAAK,CAACM,MAAP,CAAjB,CAAR;AACH,GAFQ,EAEP,EAFO,CAAT;AAIA1B,EAAAA,SAAS,CAAC,YAAI;AACV2B,IAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAW,CAAC,CAAD,CAAX,CAAeK,MAA3B;AACCR,IAAAA,QAAQ,CAACd,cAAc,CAACiB,WAAW,CAAC,CAAD,CAAX,CAAeK,MAAhB,CAAf,CAAR;AACJ,GAHQ,EAGP,CAACL,WAAD,CAHO,CAAT;AAKAxB,EAAAA,SAAS,CAAC,YAAI;AACV2B,IAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACH,GAFQ,EAEP,CAACA,SAAD,CAFO,CAAT;AAKA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKL,KAAK,CAACM,MAAX,OADJ,CADJ;AAKH,CAvBD;;GAAMP,M;UACef,W,EACeC,W;;;KAF9Bc,M;;AAyBNA,MAAM,CAACW,eAAP;AAAA,uEAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgBC,YAAAA,KAAhB,QAAgBA,KAAhB,EAAsBC,GAAtB,QAAsBA,GAAtB,EAA0BC,GAA1B,QAA0BA,GAA1B,EAA8BC,KAA9B,QAA8BA,KAA9B;AACfC,YAAAA,QADe,GACJD,KAAK,CAACE,IADF;AAAA,6CAGd;AACHV,cAAAA,MAAM,EAAES;AADL,aAHc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzB;;AAAA;AAAA;AAAA;AAAA;;AAOA,eAAehB,MAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport {connect,useDispatch,useSelector} from 'react-redux';\r\nimport {getSingleRoaster,getAllPlayerId} from '../redux/actions/counterActions';\r\n\r\n//--//\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n});\r\n\r\nconst Roster = (props) => {\r\n    const dispatch = useDispatch();\r\n    const {teamRoaster,personIds} = useSelector((state)=>state.counter);\r\n\r\n    useEffect(()=>{\r\n        dispatch(getSingleRoaster(props.teamID))\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        console.log(teamRoaster[0].teamId);\r\n         dispatch(getAllPlayerId(teamRoaster[0].teamId));\r\n    },[teamRoaster])\r\n\r\n    useEffect(()=>{\r\n        console.log(personIds);\r\n    },[personIds])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>{props.teamID}xx</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nRoster.getInitialProps = async function({store,req,res,query}) {\r\n    const teamName = query.team;\r\n\r\n    return {\r\n        teamID: teamName\r\n    };\r\n}\r\nexport default Roster;\r\n\r\n"]},"metadata":{},"sourceType":"module"}