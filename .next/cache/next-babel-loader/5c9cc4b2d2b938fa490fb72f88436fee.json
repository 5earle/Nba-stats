{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { INCREMENT_COUNTER, DECREMENT_COUNTER, SAVE_TEAMS, GET_PLAYERS, SEARCH_PLAYER_ONE, SEARCH_PLAYER_TWO, GET_SINGLE_ROASTER, SET_LOADING, GET_ALL_PLAYERS_ID } from './types';\nimport { useDispatch } from 'react-redux'; //Action Creator\n\nexport var incrementCounter = function incrementCounter() {\n  return {\n    type: INCREMENT_COUNTER\n  };\n};\nexport var decrementCounter = function decrementCounter() {\n  return {\n    type: DECREMENT_COUNTER\n  };\n};\nexport var searchPlayerTwo = function searchPlayerTwo(text) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch(\"http://data.nba.net/10s/prod/v1/2019/players/\".concat(text, \"_profile.json\"));\n\n            case 3:\n              res = _context.sent;\n              _context.next = 6;\n              return res.json();\n\n            case 6:\n              data = _context.sent;\n              dispatch({\n                type: SEARCH_PLAYER_TWO,\n                payload: data.league.standard.stats.careerSummary\n              });\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 10]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var getPlayers = function getPlayers() {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", {\n                type: GET_PLAYERS\n              });\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n}; //-//\n\nexport var addTeams = function addTeams(Teams) {\n  return {\n    type: SAVE_TEAMS,\n    payload: Teams\n  };\n};\nexport var searchPlayers = function searchPlayers(term) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      var res, terms, data;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              //send to the reducer\n              setLoading();\n              res = [];\n              terms = term.map(function (item) {\n                fetch(\"http://data.nba.net/10s/prod/v1/2019/players/\".concat(term, \"_profile.json\")).then(function (item) {\n                  res.push(item);\n                });\n              });\n              _context3.next = 6;\n              return res.json();\n\n            case 6:\n              data = _context3.sent;\n              dispatch({\n                type: SEARCH_PLAYER_ONE,\n                payload: data.league.standard.stats.careerSummary\n              });\n              _context3.next = 13;\n              break;\n\n            case 10:\n              _context3.prev = 10;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(_context3.t0);\n\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 10]]);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var getSingleRoaster = function getSingleRoaster(teamname) {\n  return function (dispatch) {\n    //send to the reducer\n    setLoading();\n    dispatch({\n      type: GET_SINGLE_ROASTER,\n      payload: teamname\n    });\n  };\n};\nexport var getAllPlayerId = function getAllPlayerId(teamid) {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch) {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              //send to the reducer\n              setLoading();\n              _context4.next = 4;\n              return fetch(\"http://data.nba.net/10s/prod/v1/2019/teams/\".concat(teamid, \"/roster.json\"));\n\n            case 4:\n              res = _context4.sent;\n              _context4.next = 7;\n              return res.json();\n\n            case 7:\n              data = _context4.sent;\n              dispatch({\n                type: GET_ALL_PLAYERS_ID,\n                payload: data\n              });\n              _context4.next = 13;\n              break;\n\n            case 11:\n              _context4.prev = 11;\n              _context4.t0 = _context4[\"catch\"](0);\n\n            case 13:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 11]]);\n    }));\n\n    return function (_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n}; // Set loading to true\n\nexport var setLoading = function setLoading() {\n  return {\n    type: SET_LOADING\n  };\n};","map":{"version":3,"sources":["W:/1FrontEnd/react stuff/courtSide/redux/actions/counterActions.js"],"names":["INCREMENT_COUNTER","DECREMENT_COUNTER","SAVE_TEAMS","GET_PLAYERS","SEARCH_PLAYER_ONE","SEARCH_PLAYER_TWO","GET_SINGLE_ROASTER","SET_LOADING","GET_ALL_PLAYERS_ID","useDispatch","incrementCounter","type","decrementCounter","searchPlayerTwo","text","dispatch","fetch","res","json","data","payload","league","standard","stats","careerSummary","console","log","getPlayers","addTeams","Teams","searchPlayers","term","setLoading","terms","map","item","then","push","getSingleRoaster","teamname","getAllPlayerId","teamid"],"mappings":"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","sourcesContent":["import {INCREMENT_COUNTER,\r\n    DECREMENT_COUNTER,\r\n    SAVE_TEAMS,\r\n    GET_PLAYERS,\r\n    SEARCH_PLAYER_ONE,\r\n    SEARCH_PLAYER_TWO,\r\n    GET_SINGLE_ROASTER,\r\n    SET_LOADING,\r\n    GET_ALL_PLAYERS_ID } from './types'\r\nimport {useDispatch} from 'react-redux';\r\n\r\n\r\n//Action Creator\r\nexport const incrementCounter = () => ({\r\n    type: INCREMENT_COUNTER\r\n});\r\n\r\nexport const decrementCounter = () => ({\r\n    type: DECREMENT_COUNTER\r\n});\r\n\r\n\r\n\r\n\r\n\r\nexport const searchPlayerTwo = text => async dispatch => {\r\n    try{\r\n        const res = await fetch(`http://data.nba.net/10s/prod/v1/2019/players/${text}_profile.json`);\r\n        const data = await res.json();\r\n\r\n        dispatch({\r\n            type: SEARCH_PLAYER_TWO,\r\n            payload: data.league.standard.stats.careerSummary\r\n        })\r\n\r\n    }catch (e) {\r\n        console.log(e);\r\n    }\r\n\r\n};\r\n\r\nexport const getPlayers = () => async dispatch => ({\r\n    type: GET_PLAYERS\r\n});\r\n\r\n\r\n//-//\r\nexport const addTeams = Teams => ({\r\n    type: SAVE_TEAMS,\r\n    payload: Teams\r\n});\r\n\r\nexport const searchPlayers = (term)  => async dispatch => {\r\n    try{\r\n        //send to the reducer\r\n        setLoading();\r\n\r\n        const res = [];\r\n        let terms = term.map((item)=>{\r\n            fetch(`http://data.nba.net/10s/prod/v1/2019/players/${term}_profile.json`)\r\n                .then(item =>{\r\n                    res.push(item);\r\n                })\r\n        })\r\n\r\n        const data = await res.json();\r\n\r\n        dispatch({\r\n            type: SEARCH_PLAYER_ONE,\r\n            payload: data.league.standard.stats.careerSummary\r\n        })\r\n\r\n\r\n    }catch (e) {\r\n        console.log(e);\r\n    }\r\n\r\n};\r\n\r\nexport const getSingleRoaster = teamname => dispatch =>{\r\n\r\n    //send to the reducer\r\n    setLoading();\r\n\r\n    dispatch({\r\n        type: GET_SINGLE_ROASTER,\r\n        payload: teamname\r\n    })\r\n}\r\n\r\nexport const getAllPlayerId = teamid => async dispatch =>{\r\n\r\n    try{\r\n        //send to the reducer\r\n        setLoading();\r\n\r\n        const res = await fetch(`http://data.nba.net/10s/prod/v1/2019/teams/${teamid}/roster.json`);\r\n        const data = await res.json();\r\n\r\n        dispatch({\r\n            type: GET_ALL_PLAYERS_ID,\r\n            payload: data\r\n        })\r\n    }catch (e) {\r\n\r\n    }\r\n}\r\n\r\n\r\n// Set loading to true\r\nexport const setLoading = () => {\r\n    return {\r\n        type: SET_LOADING\r\n    };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}