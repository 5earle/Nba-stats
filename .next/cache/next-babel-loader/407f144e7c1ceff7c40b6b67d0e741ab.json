{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { INCREMENT_COUNTER, DECREMENT_COUNTER, SAVE_TEAMS, GET_PLAYERS, SEARCH_PLAYER_ONE, SEARCH_PLAYER_TWO, GET_SINGLE_ROASTER, SET_LOADING, GET_ALL_PLAYERS_ID } from './types';\nimport { useDispatch } from 'react-redux'; //Action Creator\n\nexport var incrementCounter = function incrementCounter() {\n  return {\n    type: INCREMENT_COUNTER\n  };\n};\nexport var decrementCounter = function decrementCounter() {\n  return {\n    type: DECREMENT_COUNTER\n  };\n};\nexport var searchPlayerTwo = function searchPlayerTwo(text) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch(\"http://data.nba.net/10s/prod/v1/2019/players/\".concat(text, \"_profile.json\"));\n\n            case 3:\n              res = _context.sent;\n              _context.next = 6;\n              return res.json();\n\n            case 6:\n              data = _context.sent;\n              dispatch({\n                type: SEARCH_PLAYER_TWO,\n                payload: data.league.standard.stats.careerSummary\n              });\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 10]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var getPlayers = function getPlayers() {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", {\n                type: GET_PLAYERS\n              });\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n}; //-//\n\nexport var addTeams = function addTeams(Teams) {\n  return {\n    type: SAVE_TEAMS,\n    payload: Teams\n  };\n};\nexport var searchPlayers = function searchPlayers(term) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              //send to the reducer\n              setLoading();\n              _context3.next = 4;\n              return fetch(\"http://data.nba.net/10s/prod/v1/2019/players/\".concat(term, \"_profile.json\"));\n\n            case 4:\n              res = _context3.sent;\n              _context3.next = 7;\n              return res.json();\n\n            case 7:\n              data = _context3.sent;\n              dispatch({\n                type: SEARCH_PLAYER_ONE,\n                payload: data.league.standard.stats.careerSummary\n              });\n              _context3.next = 14;\n              break;\n\n            case 11:\n              _context3.prev = 11;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(_context3.t0);\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 11]]);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var getSingleRoaster = function getSingleRoaster(teamname) {\n  return function (dispatch) {\n    //send to the reducer\n    setLoading();\n    dispatch({\n      type: GET_SINGLE_ROASTER,\n      payload: teamname\n    });\n  };\n};\nexport var getAllPlayerId = function getAllPlayerId(teamid) {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch) {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              //send to the reducer\n              setLoading();\n              _context4.next = 4;\n              return fetch(\"http://data.nba.net/10s/prod/v1/2019/teams/\".concat(teamid, \"/roster.json\"));\n\n            case 4:\n              res = _context4.sent;\n              _context4.next = 7;\n              return res.json();\n\n            case 7:\n              data = _context4.sent;\n              dispatch({\n                type: GET_ALL_PLAYERS_ID,\n                payload: data\n              });\n              _context4.next = 13;\n              break;\n\n            case 11:\n              _context4.prev = 11;\n              _context4.t0 = _context4[\"catch\"](0);\n\n            case 13:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 11]]);\n    }));\n\n    return function (_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n}; // Set loading to true\n\nexport var setLoading = function setLoading() {\n  return {\n    type: SET_LOADING\n  };\n};","map":null,"metadata":{},"sourceType":"module"}