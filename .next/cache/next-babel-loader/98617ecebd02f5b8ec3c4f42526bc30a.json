{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"W:\\\\1FrontEnd\\\\react stuff\\\\basketballApi\\\\components\\\\Navbar.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { makeStyles } from \"@material-ui/styles\"; //material-ui inline-styles\n\nimport { useTheme } from \"@material-ui/core/styles\";\n/*inline styles*/\n\nvar useStyles = makeStyles(function (theme) {\n  return {};\n});\n\nvar Navbar = function Navbar(prop) {\n  _s();\n\n  var classes = useStyles(); //inline styles\n\n  var theme = useTheme();\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, __jsx(AppBar, {\n    position: \"static\",\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, __jsx(Toolbar, {\n    disableGutters: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    component: \"h1\",\n    className: classes.toolbarTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }\n  }, __jsx(ActiveLink, {\n    href: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 25\n    }\n  }, \"NextConnect\")))));\n};\n\n_s(Navbar, \"VtevrTi9kvKTG+vqc/SYVHiEGOM=\", false, function () {\n  return [useStyles, useTheme];\n});\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["W:/1FrontEnd/react stuff/basketballApi/components/Navbar.js"],"names":["React","AppBar","Toolbar","makeStyles","useTheme","useStyles","theme","Navbar","prop","classes","root","toolbarTitle"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,UAAT,QAA2B,qBAA3B,C,CAAsD;;AACtD,SAASC,QAAT,QAAyB,0BAAzB;AAGA;;AACA,IAAMC,SAAS,GAAGF,UAAU,CAAC,UAAAG,KAAK;AAAA,SAAK,EAAL;AAAA,CAAN,CAA5B;;AAIA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,IAAD,EAAU;AAAA;;AACrB,MAAMC,OAAO,GAAGJ,SAAS,EAAzB,CADqB,CACQ;;AAC7B,MAAMC,KAAK,GAAGF,QAAQ,EAAtB;AAEA,SACI,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,QAAjB;AAA0B,IAAA,SAAS,EAAEK,OAAO,CAACC,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,OAAD;AAAS,IAAA,cAAc,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AACI,IAAA,OAAO,EAAC,IADZ;AAEI,IAAA,SAAS,EAAC,IAFd;AAGI,IAAA,SAAS,EAAED,OAAO,CAACE,YAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,MAAC,UAAD;AAAY,IAAA,IAAI,EAAC,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALJ,CADJ,CADJ,CADJ,CADJ;AAeH,CAnBD;;GAAMJ,M;UACcF,S,EACFD,Q;;;KAFZG,M;AAqBN,eAAeA,MAAf","sourcesContent":["import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { makeStyles } from \"@material-ui/styles\";     //material-ui inline-styles\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\n\r\n\r\n/*inline styles*/\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n}));\r\n\r\nconst Navbar = (prop) => {\r\n    const classes = useStyles(); //inline styles\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <AppBar position=\"static\" className={classes.root}>\r\n                <Toolbar disableGutters>\r\n                    <Typography\r\n                        variant=\"h5\"\r\n                        component=\"h1\"\r\n                        className={classes.toolbarTitle}\r\n                    >\r\n                        <ActiveLink href=\"/\">NextConnect</ActiveLink>\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n"]},"metadata":{},"sourceType":"module"}