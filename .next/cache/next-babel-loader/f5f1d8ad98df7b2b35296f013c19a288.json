{"ast":null,"code":"var _jsxFileName = \"W:\\\\1FrontEnd\\\\react stuff\\\\courtSide\\\\pages\\\\roster.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { getSingleRoaster, getAllPlayerId } from '../redux/actions/counterActions'; //--//\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  }\n});\n\nconst Roster = props => {\n  const dispatch = useDispatch();\n  const {\n    0: roaster,\n    1: setRoaster\n  } = useState([]);\n  const {\n    teamRoaster,\n    personIds\n  } = useSelector(state => state.counter);\n  useEffect(() => {\n    dispatch(getSingleRoaster(props.teamID));\n  }, []);\n  useEffect(() => {\n    console.log(teamRoaster);\n    dispatch(getAllPlayerId(teamRoaster.teamId));\n  }, [teamRoaster]);\n  useEffect(() => {\n    console.log(personIds);\n  }, [personIds]);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, props.teamID));\n};\n\nRoster.getInitialProps = async function ({\n  store,\n  req,\n  res,\n  query\n}) {\n  const teamName = query.team;\n  return {\n    teamID: teamName\n  };\n};\n\nexport default Roster;","map":{"version":3,"sources":["W:/1FrontEnd/react stuff/courtSide/pages/roster.js"],"names":["React","useEffect","useState","fetch","connect","useDispatch","useSelector","getSingleRoaster","getAllPlayerId","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useStyles","table","minWidth","Roster","props","dispatch","roaster","setRoaster","teamRoaster","personIds","state","counter","teamID","console","log","teamId","getInitialProps","store","req","res","query","teamName","team"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAAQC,OAAR,EAAgBC,WAAhB,EAA4BC,WAA5B,QAA8C,aAA9C;AACA,SAAQC,gBAAR,EAAyBC,cAAzB,QAA8C,iCAA9C,C,CAEA;;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AAGA,MAAMC,SAAS,GAAGR,UAAU,CAAC;AACzBS,EAAAA,KAAK,EAAE;AACHC,IAAAA,QAAQ,EAAE;AADP;AADkB,CAAD,CAA5B;;AAMA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACtB,QAAMC,QAAQ,GAAGjB,WAAW,EAA5B;AACA,QAAM;AAAA,OAACkB,OAAD;AAAA,OAASC;AAAT,MAAuBtB,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM;AAACuB,IAAAA,WAAD;AAAaC,IAAAA;AAAb,MAA0BpB,WAAW,CAAEqB,KAAD,IAASA,KAAK,CAACC,OAAhB,CAA3C;AAEA3B,EAAAA,SAAS,CAAC,MAAI;AACVqB,IAAAA,QAAQ,CAACf,gBAAgB,CAACc,KAAK,CAACQ,MAAP,CAAjB,CAAR;AACH,GAFQ,EAEP,EAFO,CAAT;AAIA5B,EAAAA,SAAS,CAAC,MAAI;AACV6B,IAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ;AACCH,IAAAA,QAAQ,CAACd,cAAc,CAACiB,WAAW,CAACO,MAAb,CAAf,CAAR;AACJ,GAHQ,EAGP,CAACP,WAAD,CAHO,CAAT;AAKAxB,EAAAA,SAAS,CAAC,MAAI;AACV6B,IAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;AACH,GAFQ,EAEP,CAACA,SAAD,CAFO,CAAT;AAKA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKL,KAAK,CAACQ,MAAX,CADJ,CADJ;AAKH,CAxBD;;AA0BAT,MAAM,CAACa,eAAP,GAAyB,gBAAe;AAACC,EAAAA,KAAD;AAAOC,EAAAA,GAAP;AAAWC,EAAAA,GAAX;AAAeC,EAAAA;AAAf,CAAf,EAAsC;AAC3D,QAAMC,QAAQ,GAAGD,KAAK,CAACE,IAAvB;AAEA,SAAO;AACHV,IAAAA,MAAM,EAAES;AADL,GAAP;AAGH,CAND;;AAOA,eAAelB,MAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport {connect,useDispatch,useSelector} from 'react-redux';\r\nimport {getSingleRoaster,getAllPlayerId} from '../redux/actions/counterActions';\r\n\r\n//--//\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n});\r\n\r\nconst Roster = (props) => {\r\n    const dispatch = useDispatch();\r\n    const [roaster,setRoaster] = useState([]);\r\n    const {teamRoaster,personIds} = useSelector((state)=>state.counter);\r\n\r\n    useEffect(()=>{\r\n        dispatch(getSingleRoaster(props.teamID))\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        console.log(teamRoaster);\r\n         dispatch(getAllPlayerId(teamRoaster.teamId));\r\n    },[teamRoaster])\r\n\r\n    useEffect(()=>{\r\n        console.log(personIds);\r\n    },[personIds])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>{props.teamID}</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nRoster.getInitialProps = async function({store,req,res,query}) {\r\n    const teamName = query.team;\r\n\r\n    return {\r\n        teamID: teamName\r\n    };\r\n}\r\nexport default Roster;\r\n\r\n"]},"metadata":{},"sourceType":"module"}