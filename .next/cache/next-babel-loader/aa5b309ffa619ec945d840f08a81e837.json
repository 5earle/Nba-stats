{"ast":null,"code":"import { INCREMENT_COUNTER, DECREMENT_COUNTER, SAVE_PLAYERS, GET_PLAYERS, SEARCH_PLAYER_ONE, SEARCH_PLAYER_TWO } from './types';\nimport { useDispatch } from 'react-redux'; //Action Creator\n\nexport const incrementCounter = () => ({\n  type: INCREMENT_COUNTER\n});\nexport const decrementCounter = () => ({\n  type: DECREMENT_COUNTER\n});\nexport const addTeams = Teams => ({\n  type: SAVE_PLAYERS,\n  payload: Teams\n});\nexport const searchPlayers = textObj => async dispatch => {\n  try {\n    const term = textObj.value;\n    const res = await fetch(`http://data.nba.net/10s/prod/v1/2019/players/${term}_profile.json`);\n    const data = await res.json();\n\n    if (textObj.id === 'first') {\n      dispatch({\n        type: SEARCH_PLAYER_ONE,\n        payload: data.league.standard.stats.careerSummary\n      });\n    }\n\n    if (textObj.id === 'second') {\n      dispatch({\n        type: SEARCH_PLAYER_TWO,\n        payload: data.league.standard.stats.careerSummary\n      });\n    }\n  } catch (e) {\n    console.log(e);\n  }\n};\nexport const searchPlayerTwo = text => async dispatch => {\n  try {\n    const res = await fetch(`http://data.nba.net/10s/prod/v1/2019/players/${text}_profile.json`);\n    const data = await res.json();\n    dispatch({\n      type: SEARCH_PLAYER_TWO,\n      payload: data.league.standard.stats.careerSummary\n    });\n  } catch (e) {\n    console.log(e);\n  }\n};\nexport const getPlayers = () => async dispatch => ({\n  type: GET_PLAYERS\n});","map":{"version":3,"sources":["W:/1FrontEnd/react stuff/courtSide/redux/actions/counterActions.js"],"names":["INCREMENT_COUNTER","DECREMENT_COUNTER","SAVE_PLAYERS","GET_PLAYERS","SEARCH_PLAYER_ONE","SEARCH_PLAYER_TWO","useDispatch","incrementCounter","type","decrementCounter","addTeams","Teams","payload","searchPlayers","textObj","dispatch","term","value","res","fetch","data","json","id","league","standard","stats","careerSummary","e","console","log","searchPlayerTwo","text","getPlayers"],"mappings":"AAAA,SAAQA,iBAAR,EACIC,iBADJ,EAEIC,YAFJ,EAGIC,WAHJ,EAIIC,iBAJJ,EAKIC,iBALJ,QAK4B,SAL5B;AAMA,SAAQC,WAAR,QAA0B,aAA1B,C,CAGA;;AACA,OAAO,MAAMC,gBAAgB,GAAG,OAAO;AACnCC,EAAAA,IAAI,EAAER;AAD6B,CAAP,CAAzB;AAIP,OAAO,MAAMS,gBAAgB,GAAG,OAAO;AACnCD,EAAAA,IAAI,EAAEP;AAD6B,CAAP,CAAzB;AAIP,OAAO,MAAMS,QAAQ,GAAGC,KAAK,KAAK;AAC9BH,EAAAA,IAAI,EAAEN,YADwB;AAE9BU,EAAAA,OAAO,EAAED;AAFqB,CAAL,CAAtB;AAKP,OAAO,MAAME,aAAa,GAAGC,OAAO,IAAI,MAAMC,QAAN,IAAkB;AACtD,MAAG;AACC,UAAMC,IAAI,GAAGF,OAAO,CAACG,KAArB;AACA,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,gDAA+CH,IAAK,eAAtD,CAAvB;AACA,UAAMI,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;;AAEA,QAAGP,OAAO,CAACQ,EAAR,KAAe,OAAlB,EAA0B;AACtBP,MAAAA,QAAQ,CAAC;AACLP,QAAAA,IAAI,EAAEJ,iBADD;AAELQ,QAAAA,OAAO,EAAEQ,IAAI,CAACG,MAAL,CAAYC,QAAZ,CAAqBC,KAArB,CAA2BC;AAF/B,OAAD,CAAR;AAIH;;AACD,QAAGZ,OAAO,CAACQ,EAAR,KAAe,QAAlB,EAA2B;AACvBP,MAAAA,QAAQ,CAAC;AACLP,QAAAA,IAAI,EAAEH,iBADD;AAELO,QAAAA,OAAO,EAAEQ,IAAI,CAACG,MAAL,CAAYC,QAAZ,CAAqBC,KAArB,CAA2BC;AAF/B,OAAD,CAAR;AAIH;AAGJ,GAnBD,CAmBC,OAAOC,CAAP,EAAU;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AAEJ,CAxBM;AA0BP,OAAO,MAAMG,eAAe,GAAGC,IAAI,IAAI,MAAMhB,QAAN,IAAkB;AACrD,MAAG;AACC,UAAMG,GAAG,GAAG,MAAMC,KAAK,CAAE,gDAA+CY,IAAK,eAAtD,CAAvB;AACA,UAAMX,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEAN,IAAAA,QAAQ,CAAC;AACLP,MAAAA,IAAI,EAAEH,iBADD;AAELO,MAAAA,OAAO,EAAEQ,IAAI,CAACG,MAAL,CAAYC,QAAZ,CAAqBC,KAArB,CAA2BC;AAF/B,KAAD,CAAR;AAKH,GATD,CASC,OAAOC,CAAP,EAAU;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AAEJ,CAdM;AAgBP,OAAO,MAAMK,UAAU,GAAG,MAAM,MAAMjB,QAAN,KAAmB;AAC/CP,EAAAA,IAAI,EAAEL;AADyC,CAAnB,CAAzB","sourcesContent":["import {INCREMENT_COUNTER,\r\n    DECREMENT_COUNTER,\r\n    SAVE_PLAYERS,\r\n    GET_PLAYERS,\r\n    SEARCH_PLAYER_ONE,\r\n    SEARCH_PLAYER_TWO} from './types'\r\nimport {useDispatch} from 'react-redux';\r\n\r\n\r\n//Action Creator\r\nexport const incrementCounter = () => ({\r\n    type: INCREMENT_COUNTER\r\n});\r\n\r\nexport const decrementCounter = () => ({\r\n    type: DECREMENT_COUNTER\r\n});\r\n\r\nexport const addTeams = Teams => ({\r\n    type: SAVE_PLAYERS,\r\n    payload: Teams\r\n});\r\n\r\nexport const searchPlayers = textObj => async dispatch => {\r\n    try{\r\n        const term = textObj.value;\r\n        const res = await fetch(`http://data.nba.net/10s/prod/v1/2019/players/${term}_profile.json`);\r\n        const data = await res.json();\r\n\r\n        if(textObj.id === 'first'){\r\n            dispatch({\r\n                type: SEARCH_PLAYER_ONE,\r\n                payload: data.league.standard.stats.careerSummary\r\n            })\r\n        }\r\n        if(textObj.id === 'second'){\r\n            dispatch({\r\n                type: SEARCH_PLAYER_TWO,\r\n                payload: data.league.standard.stats.careerSummary\r\n            })\r\n        }\r\n\r\n\r\n    }catch (e) {\r\n        console.log(e);\r\n    }\r\n\r\n};\r\n\r\nexport const searchPlayerTwo = text => async dispatch => {\r\n    try{\r\n        const res = await fetch(`http://data.nba.net/10s/prod/v1/2019/players/${text}_profile.json`);\r\n        const data = await res.json();\r\n\r\n        dispatch({\r\n            type: SEARCH_PLAYER_TWO,\r\n            payload: data.league.standard.stats.careerSummary\r\n        })\r\n\r\n    }catch (e) {\r\n        console.log(e);\r\n    }\r\n\r\n};\r\n\r\nexport const getPlayers = () => async dispatch => ({\r\n    type: GET_PLAYERS\r\n});\r\n"]},"metadata":{},"sourceType":"module"}