{"ast":null,"code":"var _jsxFileName = \"W:\\\\1FrontEnd\\\\react stuff\\\\courtSide\\\\pages\\\\roster.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { getSingleRoaster } from '../redux/actions/counterActions';\n\nconst Roster = props => {\n  const dispatch = useDispatch();\n  const {\n    teamRoaster\n  } = useSelector(state => state.counter);\n  useEffect(() => {\n    dispatch(getSingleRoaster('Atlanta Hawks'));\n    console.log(teamRoaster);\n  }, []);\n  useEffect(() => {\n    console.log(teamRoaster);\n  }, [teamRoaster]);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, props.teamID));\n};\n\nRoster.getInitialProps = async function ({\n  store,\n  req,\n  res,\n  query\n}) {\n  const teamName = query.team;\n  return {\n    teamID: teamName\n  };\n};\n\nexport default Roster;","map":{"version":3,"sources":["W:/1FrontEnd/react stuff/courtSide/pages/roster.js"],"names":["React","useEffect","fetch","connect","useDispatch","useSelector","getSingleRoaster","Roster","props","dispatch","teamRoaster","state","counter","console","log","teamID","getInitialProps","store","req","res","query","teamName","team"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAAQC,OAAR,EAAgBC,WAAhB,EAA4BC,WAA5B,QAA8C,aAA9C;AACA,SAAQC,gBAAR,QAA+B,iCAA/B;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACtB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM;AAACM,IAAAA;AAAD,MAAgBL,WAAW,CAAEM,KAAD,IAASA,KAAK,CAACC,OAAhB,CAAjC;AAEAX,EAAAA,SAAS,CAAC,MAAI;AACVQ,IAAAA,QAAQ,CAACH,gBAAgB,CAAC,eAAD,CAAjB,CAAR;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AACH,GAHQ,EAGP,EAHO,CAAT;AAKAT,EAAAA,SAAS,CAAC,MAAI;AACVY,IAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AACH,GAFQ,EAEP,CAACA,WAAD,CAFO,CAAT;AAKA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,KAAK,CAACO,MAAX,CADJ,CADJ;AAKH,CAnBD;;AAqBAR,MAAM,CAACS,eAAP,GAAyB,gBAAe;AAACC,EAAAA,KAAD;AAAOC,EAAAA,GAAP;AAAWC,EAAAA,GAAX;AAAeC,EAAAA;AAAf,CAAf,EAAsC;AAC3D,QAAMC,QAAQ,GAAGD,KAAK,CAACE,IAAvB;AAEA,SAAO;AACHP,IAAAA,MAAM,EAAEM;AADL,GAAP;AAGH,CAND;;AAOA,eAAed,MAAf","sourcesContent":["import React, {useEffect} from 'react';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport {connect,useDispatch,useSelector} from 'react-redux';\r\nimport {getSingleRoaster} from '../redux/actions/counterActions';\r\n\r\nconst Roster = (props) => {\r\n    const dispatch = useDispatch();\r\n    const {teamRoaster} = useSelector((state)=>state.counter);\r\n\r\n    useEffect(()=>{\r\n        dispatch(getSingleRoaster('Atlanta Hawks'))\r\n        console.log(teamRoaster);\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        console.log(teamRoaster);\r\n    },[teamRoaster])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>{props.teamID}</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nRoster.getInitialProps = async function({store,req,res,query}) {\r\n    const teamName = query.team;\r\n\r\n    return {\r\n        teamID: teamName\r\n    };\r\n}\r\nexport default Roster;\r\n\r\n"]},"metadata":{},"sourceType":"module"}