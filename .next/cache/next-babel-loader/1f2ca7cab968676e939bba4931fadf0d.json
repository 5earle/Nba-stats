{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { INCREMENT_COUNTER, DECREMENT_COUNTER, SAVE_TEAMS, GET_PLAYERS, SEARCH_PLAYER_ONE, SEARCH_PLAYER_TWO, GET_SINGLE_ROASTER } from '../actions/types';\nvar initialState = {\n  basketballTeams: null,\n  counter: 0,\n  contestantOne: null,\n  contestantTwo: null,\n  careerSummary: null,\n  teamRoaster: null\n};\n\nvar counterReducer = function counterReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SAVE_TEAMS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        basketballTeams: action.payload\n      });\n\n    case GET_PLAYERS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        basketballTeams: action.payload\n      });\n\n    case SEARCH_PLAYER_ONE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        contestantOne: action.payload\n      });\n\n    case SEARCH_PLAYER_TWO:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        contestantTwo: action.payload\n      });\n\n    case INCREMENT_COUNTER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        counter: state.counter + 1\n      });\n\n    case DECREMENT_COUNTER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        counter: state.counter - 1\n      });\n\n    case GET_SINGLE_ROASTER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        teamRoaster: state.basketballTeams.filter(function (team) {\n          return team.fullName === action.payload;\n        })\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nexport default counterReducer;","map":{"version":3,"sources":["W:/1FrontEnd/react stuff/courtSide/redux/reducers/counterReducer.js"],"names":["INCREMENT_COUNTER","DECREMENT_COUNTER","SAVE_TEAMS","GET_PLAYERS","SEARCH_PLAYER_ONE","SEARCH_PLAYER_TWO","GET_SINGLE_ROASTER","initialState","basketballTeams","counter","contestantOne","contestantTwo","careerSummary","teamRoaster","counterReducer","state","action","type","payload","filter","team","fullName"],"mappings":";;;;;;AAAA,SAAQA,iBAAR,EACIC,iBADJ,EAEIC,UAFJ,EAGIC,WAHJ,EAIIC,iBAJJ,EAKIC,iBALJ,EAMIC,kBANJ,QAM6B,kBAN7B;AAUA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,eAAe,EAAE,IADA;AAEjBC,EAAAA,OAAO,EAAE,CAFQ;AAGjBC,EAAAA,aAAa,EAAE,IAHE;AAIjBC,EAAAA,aAAa,EAAE,IAJE;AAKjBC,EAAAA,aAAa,EAAE,IALE;AAMjBC,EAAAA,WAAW,EAAE;AANI,CAArB;;AASA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAiC;AAAA,MAAhCC,KAAgC,uEAAzBR,YAAyB;AAAA,MAAXS,MAAW;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKf,UAAL;AACI,6CACOa,KADP;AAEIP,QAAAA,eAAe,EAAEQ,MAAM,CAACE;AAF5B;;AAIJ,SAAKf,WAAL;AACI,6CACOY,KADP;AAEIP,QAAAA,eAAe,EAAEQ,MAAM,CAACE;AAF5B;;AAIJ,SAAKd,iBAAL;AACI,6CACOW,KADP;AAEIL,QAAAA,aAAa,EAAEM,MAAM,CAACE;AAF1B;;AAKJ,SAAKb,iBAAL;AACI,6CACOU,KADP;AAEIJ,QAAAA,aAAa,EAAEK,MAAM,CAACE;AAF1B;;AAMJ,SAAKlB,iBAAL;AACI,6CAAWe,KAAX;AAAkBN,QAAAA,OAAO,EAAEM,KAAK,CAACN,OAAN,GAAgB;AAA3C;;AACJ,SAAKR,iBAAL;AACI,6CAAWc,KAAX;AAAkBN,QAAAA,OAAO,EAAEM,KAAK,CAACN,OAAN,GAAgB;AAA3C;;AAEJ,SAAKH,kBAAL;AACI,6CACOS,KADP;AAEIF,QAAAA,WAAW,EAAEE,KAAK,CAACP,eAAN,CAAsBW,MAAtB,CAA6B,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACC,QAAL,KAAkBL,MAAM,CAACE,OAA7B;AAAA,SAAjC;AAFjB;;AAIJ;AACI,+BAAWH,KAAX;AAnCR;AAqCH,CAtCD;;AAwCA,eAAeD,cAAf","sourcesContent":["import {INCREMENT_COUNTER,\r\n    DECREMENT_COUNTER,\r\n    SAVE_TEAMS,\r\n    GET_PLAYERS,\r\n    SEARCH_PLAYER_ONE,\r\n    SEARCH_PLAYER_TWO,\r\n    GET_SINGLE_ROASTER} from '../actions/types'\r\n\r\n\r\n\r\nconst initialState = {\r\n    basketballTeams: null,\r\n    counter: 0,\r\n    contestantOne: null,\r\n    contestantTwo: null,\r\n    careerSummary: null,\r\n    teamRoaster: null\r\n};\r\n\r\nconst counterReducer = (state= initialState, action) => {\r\n    switch (action.type) {\r\n        case SAVE_TEAMS:\r\n            return {\r\n                ...state,\r\n                basketballTeams: action.payload\r\n            };\r\n        case GET_PLAYERS:\r\n            return {\r\n                ...state,\r\n                basketballTeams: action.payload\r\n            };\r\n        case SEARCH_PLAYER_ONE:\r\n            return {\r\n                ...state,\r\n                contestantOne: action.payload\r\n            };\r\n\r\n        case SEARCH_PLAYER_TWO:\r\n            return {\r\n                ...state,\r\n                contestantTwo: action.payload\r\n            };\r\n\r\n\r\n        case INCREMENT_COUNTER:\r\n            return {...state, counter: state.counter + 1};\r\n        case DECREMENT_COUNTER:\r\n            return {...state, counter: state.counter - 1};\r\n\r\n        case GET_SINGLE_ROASTER:\r\n            return{\r\n                ...state,\r\n                teamRoaster: state.basketballTeams.filter(team => team.fullName === action.payload)\r\n            }\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n\r\nexport default counterReducer;\r\n\r\n"]},"metadata":{},"sourceType":"module"}