{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"W:\\\\1FrontEnd\\\\react stuff\\\\courtSide\\\\pages\\\\roster.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { getSingleRoaster } from '../redux/actions/counterActions';\n\nvar Roster = function Roster(props) {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useState = useState(),\n      roaster = _useState[0],\n      setRoaster = _useState[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.counter;\n  }),\n      teamRoaster = _useSelector.teamRoaster;\n\n  useEffect(function () {\n    dispatch(getSingleRoaster(props.teamID));\n    console.log(teamRoaster);\n  }, []);\n  useEffect(function () {\n    console.log(teamRoaster);\n\n    if (teamRoaster !== null) {\n      setRoaster(teamRoaster);\n      console.log(state);\n    }\n  }, [teamRoaster]);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, props.teamID));\n};\n\n_s(Roster, \"ZJ1sSJYwTBc++MBWbFT83buvBkg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Roster;\n\nRoster.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var store, req, res, query, teamName;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            store = _ref.store, req = _ref.req, res = _ref.res, query = _ref.query;\n            teamName = query.team;\n            return _context.abrupt(\"return\", {\n              teamID: teamName\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Roster;\n\nvar _c;\n\n$RefreshReg$(_c, \"Roster\");","map":{"version":3,"sources":["W:/1FrontEnd/react stuff/courtSide/pages/roster.js"],"names":["React","useEffect","useState","fetch","connect","useDispatch","useSelector","getSingleRoaster","Roster","props","dispatch","roaster","setRoaster","state","counter","teamRoaster","teamID","console","log","getInitialProps","store","req","res","query","teamName","team"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAAQC,OAAR,EAAgBC,WAAhB,EAA4BC,WAA5B,QAA8C,aAA9C;AACA,SAAQC,gBAAR,QAA+B,iCAA/B;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AAAA;;AACtB,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;;AADsB,kBAEOH,QAAQ,EAFf;AAAA,MAEfS,OAFe;AAAA,MAEPC,UAFO;;AAAA,qBAGAN,WAAW,CAAC,UAACO,KAAD;AAAA,WAASA,KAAK,CAACC,OAAf;AAAA,GAAD,CAHX;AAAA,MAGfC,WAHe,gBAGfA,WAHe;;AAKtBd,EAAAA,SAAS,CAAC,YAAI;AACVS,IAAAA,QAAQ,CAACH,gBAAgB,CAACE,KAAK,CAACO,MAAP,CAAjB,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AACH,GAHQ,EAGP,EAHO,CAAT;AAKAd,EAAAA,SAAS,CAAC,YAAI;AACVgB,IAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;;AACA,QAAGA,WAAW,KAAK,IAAnB,EAAwB;AACpBH,MAAAA,UAAU,CAACG,WAAD,CAAV;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACH;AACJ,GANQ,EAMP,CAACE,WAAD,CANO,CAAT;AASA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKN,KAAK,CAACO,MAAX,CADJ,CADJ;AAKH,CAxBD;;GAAMR,M;UACeH,W,EAEKC,W;;;KAHpBE,M;;AA0BNA,MAAM,CAACW,eAAP;AAAA,uEAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgBC,YAAAA,KAAhB,QAAgBA,KAAhB,EAAsBC,GAAtB,QAAsBA,GAAtB,EAA0BC,GAA1B,QAA0BA,GAA1B,EAA8BC,KAA9B,QAA8BA,KAA9B;AACfC,YAAAA,QADe,GACJD,KAAK,CAACE,IADF;AAAA,6CAGd;AACHT,cAAAA,MAAM,EAAEQ;AADL,aAHc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzB;;AAAA;AAAA;AAAA;AAAA;;AAOA,eAAehB,MAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport {connect,useDispatch,useSelector} from 'react-redux';\r\nimport {getSingleRoaster} from '../redux/actions/counterActions';\r\n\r\nconst Roster = (props) => {\r\n    const dispatch = useDispatch();\r\n    const [roaster,setRoaster] = useState();\r\n    const {teamRoaster} = useSelector((state)=>state.counter);\r\n\r\n    useEffect(()=>{\r\n        dispatch(getSingleRoaster(props.teamID))\r\n        console.log(teamRoaster);\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        console.log(teamRoaster);\r\n        if(teamRoaster !== null){\r\n            setRoaster(teamRoaster);\r\n            console.log(state);\r\n        }\r\n    },[teamRoaster])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>{props.teamID}</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nRoster.getInitialProps = async function({store,req,res,query}) {\r\n    const teamName = query.team;\r\n\r\n    return {\r\n        teamID: teamName\r\n    };\r\n}\r\nexport default Roster;\r\n\r\n"]},"metadata":{},"sourceType":"module"}