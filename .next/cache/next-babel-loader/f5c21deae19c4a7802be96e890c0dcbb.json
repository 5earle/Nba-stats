{"ast":null,"code":"import { INCREMENT_COUNTER, DECREMENT_COUNTER, SAVE_TEAMS, GET_PLAYERS, SEARCH_PLAYER_ONE, SEARCH_PLAYER_TWO, GET_SINGLE_ROASTER, SET_LOADING, GET_ALL_PLAYERS_ID } from './types';\nimport { useDispatch } from 'react-redux'; //Action Creator\n\nexport const incrementCounter = () => ({\n  type: INCREMENT_COUNTER\n});\nexport const decrementCounter = () => ({\n  type: DECREMENT_COUNTER\n});\nexport const searchPlayerTwo = text => async dispatch => {\n  try {\n    const res = await fetch(`http://data.nba.net/10s/prod/v1/2019/players/${text}_profile.json`);\n    const data = await res.json();\n    dispatch({\n      type: SEARCH_PLAYER_TWO,\n      payload: data.league.standard.stats.careerSummary\n    });\n  } catch (e) {\n    console.log(e);\n  }\n};\nexport const getPlayers = () => async dispatch => ({\n  type: GET_PLAYERS\n}); //-//\n\nexport const addTeams = Teams => ({\n  type: SAVE_TEAMS,\n  payload: Teams\n});\nexport const searchPlayers = term => async dispatch => {\n  try {\n    //send to the reducer\n    setLoading();\n    const res = await fetch(`http://data.nba.net/10s/prod/v1/2019/players/${term}_profile.json`);\n    const data = await res.json();\n    dispatch({\n      type: SEARCH_PLAYER_ONE,\n      payload: data.league.standard.stats.careerSummary\n    });\n  } catch (e) {\n    console.log(e);\n  }\n};\nexport const getSingleRoaster = teamname => dispatch => {\n  //send to the reducer\n  setLoading();\n  dispatch({\n    type: GET_SINGLE_ROASTER,\n    payload: teamname\n  });\n};\nexport const getAllPlayerId = teamid => async dispatch => {\n  try {\n    //send to the reducer\n    setLoading();\n    const res = await fetch(`http://data.nba.net/10s/prod/v1/2019/teams/${teamid}/roster.json`);\n    const data = await res.json();\n    dispatch({\n      type: GET_ALL_PLAYERS_ID,\n      payload: data\n    });\n  } catch (e) {}\n}; // Set loading to true\n\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n};","map":null,"metadata":{},"sourceType":"module"}