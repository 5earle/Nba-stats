{"ast":null,"code":"var _jsxFileName = \"W:\\\\1FrontEnd\\\\react stuff\\\\basketballApi\\\\components\\\\Search.js\";\nvar __jsx = React.createElement;\nimport { useImmer } from \"use-immer\";\nimport React, { useEffect } from 'react';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { searchPlayers, searchPlayerTwo } from '../redux/actions/counterActions';\nimport Cards from './Cards';\nimport TextField from '@material-ui/core/TextField';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    width: '100%'\n  },\n  columnCard: {\n    width: '50%',\n    margin: 'auto',\n    padding: '.75rem',\n    backgroundColor: '#00d1b2',\n    color: '#fff'\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: '32px',\n    fontWeight: '600',\n    textAlign: 'center',\n    textTransform: 'capitalize',\n    color: '#fff'\n  },\n  subTitle: {\n    fontSize: '20px',\n    fontWeight: '400',\n    textAlign: 'center',\n    textTransform: 'capitalize',\n    color: '#fff'\n  },\n  pos: {\n    marginBottom: 12\n  },\n  flexCenter: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: '100px 0',\n    '& > div': {\n      width: '40%',\n      marginRight: '20px'\n    }\n  }\n});\n\nconst Search = props => {\n  const classes = useStyles();\n  const [state, setState] = useImmer({\n    searchTerm: \"\",\n    results: [],\n    playerOne: null,\n    playerTwo: null,\n    allPlayers: [],\n    id: null,\n    show: \"neither\",\n    requestCount: 0\n  });\n  const dispatch = useDispatch();\n  const {\n    basketBallPlayers,\n    contestantOne,\n    contestantTwo\n  } = useSelector(state => state.counter); //get all players on first render\n\n  useEffect(() => {\n    setState(draft => {\n      draft.allPlayers = basketBallPlayers;\n    });\n  }, []); //trigger when contestantOne is changed\n\n  useEffect(() => {\n    setState(draft => {\n      draft.playerOne = contestantOne;\n    });\n  }, [contestantOne, contestantTwo]); //trigger when contestantTwo is changed\n\n  useEffect(() => {\n    setState(draft => {\n      draft.playerTwo = contestantTwo;\n    });\n  }, [contestantTwo]); //trigger when search term as change\n\n  useEffect(() => {\n    const newPlayer = {\n      id: state.id,\n      value: state.searchTerm\n    };\n    dispatch(searchPlayers(newPlayer));\n  }, [state.searchTerm]);\n\n  function handleInput(e) {\n    const value = e.target.value;\n    const id = e.target.id;\n    let odds = state.allPlayers.filter(n => {\n      return n.firstName;\n    });\n    console.log(odds);\n    setState(draft => {\n      draft.searchTerm = value;\n      draft.id = id;\n    });\n  }\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: classes.flexCenter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, __jsx(\"form\", {\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }, __jsx(TextField, {\n    className: classes.root,\n    id: \"first\",\n    label: \"Player1\",\n    onChange: handleInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 25\n    }\n  })), Boolean(state.playerOne != null) && __jsx(Cards, {\n    playerInformation: state.playerOne,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, __jsx(\"form\", {\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }, __jsx(TextField, {\n    className: classes.root,\n    id: \"second\",\n    label: \"Player2\",\n    onChange: handleInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 25\n    }\n  })), Boolean(state.playerTwo !== null) && __jsx(Cards, {\n    playerInformation: state.playerTwo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 25\n    }\n  }))), state.searchTerm ? \"\" : __jsx(Card, {\n    className: classes.columnCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }, __jsx(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }\n  }, __jsx(Typography, {\n    className: classes.title,\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 25\n    }\n  }, \"Search For A Player On Both Sides\"), __jsx(Typography, {\n    className: classes.subTitle,\n    variant: \"h5\"\n    /*h5 in size*/\n    ,\n    component: \"h1\"\n    /*but and actual h1*/\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 25\n    }\n  }, \"We will tell you which is best!\"))), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }, state.allPlayers.map((name, index) => __jsx(\"li\", {\n    key: name.personId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 21\n    }\n  }, name.firstName + \" \" + name.lastName + \"=>\" + name.personId))));\n};\n\nSearch.getInitialProps = async function ({\n  store\n}) {};\n\nexport default Search;","map":{"version":3,"sources":["W:/1FrontEnd/react stuff/basketballApi/components/Search.js"],"names":["useImmer","React","useEffect","connect","useDispatch","useSelector","searchPlayers","searchPlayerTwo","Cards","TextField","CardContent","Button","Typography","makeStyles","Card","useStyles","root","minWidth","width","columnCard","margin","padding","backgroundColor","color","bullet","display","transform","title","fontSize","fontWeight","textAlign","textTransform","subTitle","pos","marginBottom","flexCenter","justifyContent","alignItems","marginRight","Search","props","classes","state","setState","searchTerm","results","playerOne","playerTwo","allPlayers","id","show","requestCount","dispatch","basketBallPlayers","contestantOne","contestantTwo","counter","draft","newPlayer","value","handleInput","e","target","odds","filter","n","firstName","console","log","Boolean","map","name","index","personId","lastName","getInitialProps","store"],"mappings":"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","sourcesContent":["import { useImmer } from \"use-immer\"\r\nimport React, {useEffect} from 'react';\r\nimport { connect,useDispatch,useSelector } from 'react-redux';\r\nimport {searchPlayers,searchPlayerTwo} from '../redux/actions/counterActions';\r\nimport Cards from './Cards';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minWidth: 275,\r\n        width: '100%'\r\n    },\r\n    columnCard:{\r\n        width: '50%',\r\n        margin: 'auto',\r\n        padding: '.75rem',\r\n        backgroundColor: '#00d1b2',\r\n        color: '#fff',\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        fontSize: '32px',\r\n        fontWeight: '600',\r\n        textAlign: 'center',\r\n        textTransform: 'capitalize',\r\n        color: '#fff',\r\n    },\r\n    subTitle: {\r\n        fontSize: '20px',\r\n        fontWeight: '400',\r\n        textAlign: 'center',\r\n        textTransform: 'capitalize',\r\n        color: '#fff',\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    flexCenter: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        margin: '100px 0',\r\n        '& > div':{\r\n            width: '40%',\r\n            marginRight: '20px',\r\n        }\r\n    },\r\n\r\n});\r\n\r\nconst Search = (props) => {\r\n    const classes = useStyles();\r\n    const [state, setState] = useImmer({\r\n        searchTerm: \"\",\r\n        results: [],\r\n        playerOne: null,\r\n        playerTwo: null,\r\n        allPlayers: [],\r\n        id: null,\r\n        show: \"neither\",\r\n        requestCount: 0,\r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n    const  {basketBallPlayers,contestantOne,contestantTwo} = useSelector((state)=>state.counter);\r\n\r\n    //get all players on first render\r\n    useEffect(()=>{\r\n        setState((draft) => {\r\n            draft.allPlayers = basketBallPlayers;\r\n        })\r\n    },[])\r\n\r\n    //trigger when contestantOne is changed\r\n    useEffect(()=>{\r\n        setState((draft) => {\r\n            draft.playerOne = contestantOne;\r\n        })\r\n    },[contestantOne,contestantTwo])\r\n\r\n    //trigger when contestantTwo is changed\r\n    useEffect(()=>{\r\n        setState((draft) => {\r\n            draft.playerTwo = contestantTwo;\r\n        })\r\n    },[contestantTwo])\r\n\r\n    //trigger when search term as change\r\n    useEffect(()=>{\r\n        const newPlayer = {\r\n            id: state.id,\r\n            value: state.searchTerm\r\n        }\r\n        dispatch(searchPlayers(newPlayer))\r\n    },[state.searchTerm])\r\n\r\n\r\n    function handleInput(e) {\r\n        const value = e.target.value\r\n        const id = e.target.id\r\n\r\n        let odds = state.allPlayers.filter(n=>{\r\n            return n.firstName;\r\n        })\r\n        console.log(odds);\r\n\r\n\r\n        setState((draft) => {\r\n            draft.searchTerm = value\r\n            draft.id = id;\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={classes.flexCenter}>\r\n                <div>\r\n                    <form noValidate autoComplete=\"off\">\r\n                        <TextField className={classes.root} id=\"first\" label=\"Player1\" onChange={handleInput} />\r\n                    </form>\r\n                    {Boolean(state.playerOne != null) &&(\r\n                        <Cards playerInformation={state.playerOne}/>\r\n                    )}\r\n                </div>\r\n\r\n                <div>\r\n\r\n                    <form noValidate autoComplete=\"off\">\r\n                        <TextField className={classes.root} id=\"second\" label=\"Player2\" onChange={handleInput} />\r\n                    </form>\r\n\r\n                    {Boolean(state.playerTwo !== null) &&(\r\n                        <Cards playerInformation={state.playerTwo}/>\r\n                    )}\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n            {state.searchTerm? \"\"\r\n                :\r\n                <Card className={classes.columnCard}>\r\n                    <CardContent>\r\n                        <Typography\r\n                            className={classes.title}\r\n                            gutterBottom>\r\n                            Search For A Player On Both Sides\r\n                        </Typography>\r\n\r\n                        <Typography\r\n                            className={classes.subTitle}\r\n                            variant=\"h5\" /*h5 in size*/\r\n                            component=\"h1\" /*but and actual h1*/\r\n                        >\r\n                            We will tell you which is best!\r\n                        </Typography>\r\n\r\n                    </CardContent>\r\n                </Card>\r\n            }\r\n            <ul>\r\n                {state.allPlayers.map((name,index) =>\r\n                    <li key={name.personId}>\r\n                        {name.firstName +\" \"+\r\n                        name.lastName + \"=>\" + name.personId}\r\n                    </li>\r\n                )}\r\n\r\n            </ul>\r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n\r\n};\r\n\r\nSearch.getInitialProps = async function({store}) {\r\n\r\n}\r\n\r\nexport default Search;\r\n\r\n"]},"metadata":{},"sourceType":"module"}